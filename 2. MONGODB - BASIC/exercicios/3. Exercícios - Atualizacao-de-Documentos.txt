Atualização de Documentos

1. Mostrar todos os documentos da collection produto do banco de dados seu nome
$  docker exec -it mongo bash
$ mongo
$ show dbs
$ use cicero
$ show collections
$ db.produtos.find()

2. Atualizar o valor do campo nome para “cpu i7” do id 1
$ db.produto.updateOne({_id:1}, {$set:{nome:"cpu i7"}})

3. Atualizar o atributo quantidade para o tipo inteiro do id: 1
$ db.produto.updateOne({_id:1},{$set:{qtd:15}})

4. Atualizar o valor do campo qtd para 30 de todos os documentos, com o campo qtd >= 30
$ db.produto.find({qtd:{$gte:30}})
$ db.produto.updateMany({qtd:{$gte:30}},{$set:{qtd:30}})

5. Atualizar o nome do campo “descricao.so” para “descricao.sistema” de todos os documentos
$ db.produto.updateMany({},{$rename:{"descricao.so":"descricao.sistema"}})

6. Atualizar o valor do campo descricao.conexao para “USB 2.0” de todos os documentos, com o campo descricao.conexao = “USB”
$ db.produto.find({"descricao.conexao":{$eq:"USB"}})
$ db.produto.updateMany({"descricao.conexao":"USB"},{$set:{"descricao.conexao":"USB 2.0"}})

7. Atualizar o valor do campo descricao.conexao para “USB 3.0” de todos os documentos, com o campo descricao.conexao = “USB 2.0” e adicionar o campo “data_modificacao”, com a data da atualização dos documentos
$ db.produto.updateMany({"descricao.conexao":"USB 2.0"},{$set:{"descricao.conexao":"USB 3.0"},$currentDate:{data_modificacao:{$type:"date"}}})

8. Atualizar um dos elementos do array descricao.sistema de “Windows” para “Windows 10” do id 3
$ db.produto.find({$or:[{"descricao.sistema":"Windows"},{"descricao.sistema":"Windows 10"}]})
$ db.produto.updateOne({_id:3,"descricao.sistema":"Windows"},{$set:{"descricao.sistema.$":"Windows 10"}})

9. Acrescentar o valor “Linux” no array descricao.sistema do id 4
$ db.produto.updateOne({_id:4},{$push:{"descricao.sistema":"Linux"}})

10. Remover o valor “Mac” no array descricao.sistema do id 3 e adicionar o campo “ts_modificacao”, com o timestamp da atualização dos documentos
$ db.produto.updateOne({_id:3},{$pull:{"descricao.sistema":"Mac"}, $currentDate:{ts_modificacao:{$type:"timestamp"}}})

___________________________________________
CRUD de Documentos

1. Criar a collection teste no banco de dados seu nome
$ db.createCollection("teste")

2. Inserir o seguinte documento:
Campo: usuario, valor: Semantix
Campo: data_acesso, valor: data atual no formato ISODate
$ db.teste.insertOne([{usuario: "Semantix",data_acesso: new Date()}])

3. Buscar todos os documentos do ano >= 2020
$  db.teste.find({data_acesso: {$gte: new Date("2020")}})
$  db.teste.find({data_acesso: {$gte: ISODate("2020-01-01")}})

4. Atualizar o campo “data_acesso” para timestamp com o valor da atualização do usuario Semantix
$ db.teste.updateOne({usuario: "Semantix"},{$currentDate: {data_acesso: {$type:"timestamp"}}})

5. Buscar todos os documentos
$ db.teste.find().pretty()

6. Deletar o documento criado pelo id
$ db.teste.deleteOne({_id: ObjectId("61454e8ce6782fe512ada79c")})

7. Deletar a collection
$ db.teste.drop() 

